import React, { useEffect, Fragment } from 'react';
import { StatusBar, Image, StyleSheet} from 'react-native';
import {Container, content, Header, body, Icon} from 'native-base'
import store from './src/store';
import { Provider } from 'react-redux';
import SplashScreen from 'react-native-splash-screen';
import 'react-native-gesture-handler';
import {NavigationContainer} from '@react-navigation/native';
import {createStackNavigator} from '@react-navigation/stack';
import {createDrawerNavigator} from '@react-navigation/drawer';
import Login from './src/pages/Login/Login';
import Main from './src/pages/Main/Main';
import TestProcess from './src/pages/TestProcess/TestProcess';
import RehabPlan from './src/pages/RehabPlan/RehabPlan';
import Exercise from './src/pages/Exercise/Exercise';
import TestsArchive from './src/pages/TestsArchive/TestsArchive';
import Instruction from './src/pages/Instruction/Instruction';
import CustomHeader from './src/components/CustomHeader';
import CustomDrawerContent from './src/components/CustomDrawerContent';

const navOptionHandler = () => ({
  headerShown: false,
});

const StackTest = createStackNavigator();

const TestStack = ({navigation})=> (
  <StackTest.Navigator initialRouteName="Main">
      <StackTest.Screen
        name="Main"
        component={Main}
        options={navOptionHandler}
      />
       <StackTest.Screen
        name="TestProcess"
        component={TestProcess}
        options={navOptionHandler}
      />
      <StackTest.Screen
        name="Instruction"
        component={Instruction}
        options={navOptionHandler}
      />
    </StackTest.Navigator>
) 
    

const StackRehabPlan = createStackNavigator();

const RehabPlanStack = ({navigation})=> (
    <StackRehabPlan.Navigator initialRouteName = "RehabPlan" >
      <StackRehabPlan.Screen
        name="RehabPlan"
        component={RehabPlan}
        options={navOptionHandler}
      />
      <StackRehabPlan.Screen
        name="Exercise"
        component={Exercise}
        options={navOptionHandler}
      />
    </StackRehabPlan.Navigator>
  );

const StackTestsArchive = createStackNavigator();

const TestsArchiveStack = ({navigation})=> (
    <StackTestsArchive.Navigator initialRouteName="TestsArchive">
      <StackTestsArchive.Screen
        name="TestsArchive"
        component={TestsArchive}
        options={navOptionHandler}
      />
    </StackTestsArchive.Navigator>
  );

// const AppNavigator = createStackNavigator(
//   {
//     Login: Login,
//     Main: Main,
//     TestProcess: TestProcess,
//     RehabPlan: RehabPlan,
//     Exercise: Exercise,
//     TestsArchive: TestsArchive,
//     Instruction:Instruction,
//   },
//   {
//     initialRouteName: 'Login',
//     headerMode: 'none'
//   }
// );

//const Navigation = createAppContainer(AppNavigator);


// function DrawerNavigator({navigation}) {
//   return (
//     <Drawer.Navigator
//       initialRouteName="Main"
//       drawerContent={() => <CustomDrawerContent navigation={navigation} />}>
//       <Drawer.Screen name="Main" component={TestStack} />
//       <Drawer.Screen name="RehabPlan" component={RehabPlanStack} />
//       <Drawer.Screen name="TestsArchive" component={TestsArchiveStack} />
//     </Drawer.Navigator>
//   );
// }

// const StackApp = createStackNavigator();


 const Drawer = createDrawerNavigator();


 const App = (navigation) => {
  useEffect(() => {
    SplashScreen.hide();
  }, []);
  return (
    <Provider store={store}>
      <Fragment >
        <StatusBar barStyle="light-content"/>
        <NavigationContainer>
          <Drawer.Navigator initialRouteName="Login" drawerContent={() => <CustomDrawerContent navigation={navigation} />}>
            <Drawer.Screen name="Main" component={TestStack} />
            <Drawer.Screen name="RehabPlan" component={RehabPlanStack} />
            <Drawer.Screen name="TestsArchive" component={TestsArchiveStack} />
            <Drawer.Screen name="Login" component={Login} />
          </Drawer.Navigator>
        </NavigationContainer>
      </Fragment>
    </Provider>
  );
};

const styles = StyleSheet.create({
  drawerImage:{
    height:100,
    width:100,
    borderRadius:75
  }

})